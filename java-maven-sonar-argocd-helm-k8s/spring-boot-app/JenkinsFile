pipeline {
    agent none

    stages {

        stage('Checkout') {
            agent { label 'master' } // Run on host Jenkins node
            steps {
                git branch: 'main', url: 'https://github.com/Venkateswaran1451/Jenkins-Zero-To-Hero.git'
                sh 'echo Checkout successful'
            }
        }

        stage('Build and Test') {
            agent {
                docker {
                    image 'venkat1451/eclipse-venkat-docker-agent:v3'
                    args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                sh 'ls -ltr'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            agent {
                docker {
                    image 'venkat1451/eclipse-venkat-docker-agent:v3'
                    args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            environment {
                SONAR_URL = "http://54.234.14.79:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }

        stage('Build and Push Docker Image') {
            agent {
                docker {
                    image 'venkat1451/eclipse-venkat-docker-agent:v3'
                    args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            environment {
                DOCKER_IMAGE = "venkat1451/ultimate-cicd:${BUILD_NUMBER}"
            }
            steps {
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                script {
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            agent { label 'master' } // Run Git operations on host node
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "Venkateswaran1451"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "venkatesmem@gmail.com"
                        git config user.name "Venkateswaran1451"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }

    }
}
